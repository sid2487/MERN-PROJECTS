import { PackageURL } from '@socketregistry/packageurl-js';
import type { SocketArtifact } from './alert/artifact.mts';
export declare function getPurlObject(purl: string | PackageURL | SocketArtifact): PackageURL | {
    id?: string;
    author?: string[];
    size?: number;
    score?: {
        license: number;
        maintenance: number;
        overall: number;
        quality: number;
        supplyChain: number;
        vulnerability: number;
    };
    batchIndex?: number;
    license?: string;
    licenseDetails?: {
        spdxDisj: string;
        authors: string[];
        errorData: string;
        provenance: string;
        filepath: string;
        match_strength: number;
    }[];
    licenseAttrib?: {
        attribText: string;
        attribData: {
            purl: string;
            foundInFilepath: string;
            spdxExpr: string;
            foundAuthors: string[];
        }[];
    }[];
    type: "golang" | "npm" | "pypi" | "unknown";
    namespace?: string;
    name: string;
    version?: string;
    subpath?: string;
    release?: string;
    direct?: boolean;
    dev?: boolean;
    dead?: boolean;
    manifestFiles?: {
        file: string;
        start?: number;
        end?: number;
    }[];
    topLevelAncestors?: string[];
    dependencies?: string[];
    alertPriorities?: {
        [key: string]: {
            result: number;
            components?: {
                isFixable: {
                    result: number;
                    value: boolean;
                };
                isReachable: {
                    result: number;
                    value: boolean;
                };
                severity: {
                    result: number;
                    value: number;
                };
            };
            formula?: string;
        };
    };
    artifact?: {
        type: "golang" | "npm" | "pypi" | "unknown";
        namespace?: string;
        name: string;
        version?: string;
        subpath?: string;
        release?: string;
    } & {
        id: string;
    };
    alerts?: {
        key: string;
        severity?: "critical" | "high" | "low" | "middle";
        category?: "license" | "maintenance" | "miscellaneous" | "quality" | "supplyChainRisk" | "vulnerability";
        file?: string;
        start?: number;
        end?: number;
        actionPolicyIndex?: number;
        fix?: {
            type: string;
            description: string;
        };
        type: "ambiguousClassifier" | "badEncoding" | "badSemver" | "badSemverDependency" | "bidi" | "binScriptConfusion" | "chronoAnomaly" | "compromisedSSHKey" | "copyleftLicense" | "criticalCVE" | "cve" | "debugAccess" | "deprecated" | "deprecatedException" | "deprecatedLicense" | "didYouMean" | "dynamicRequire" | "emptyPackage" | "envVars" | "explicitlyUnlicensedItem" | "extraneousDependency" | "fileDependency" | "filesystemAccess" | "floatingDependency" | "gitDependency" | "gitHubDependency" | "gptAnomaly" | "gptDidYouMean" | "gptMalware" | "gptSecurity" | "hasNativeCode" | "highEntropyStrings" | "homoglyphs" | "httpDependency" | "installScripts" | "invalidPackageJSON" | "invisibleChars" | "licenseChange" | "licenseException" | "licenseSpdxDisj" | "longStrings" | "majorRefactor" | "malware" | "manifestConfusion" | "mediumCVE" | "mildCVE" | "minifiedFile" | "miscLicenseIssues" | "missingAuthor" | "missingDependency" | "missingLicense" | "missingTarball" | "mixedLicense" | "modifiedException" | "modifiedLicense" | "networkAccess" | "newAuthor" | "noAuthorData" | "noBugTracker" | "noLicenseFound" | "noREADME" | "noRepository" | "noTests" | "noV1" | "noWebsite" | "nonOSILicense" | "nonSPDXLicense" | "nonpermissiveLicense" | "notice" | "obfuscatedFile" | "obfuscatedRequire" | "peerDependency" | "potentialVulnerability" | "semverAnomaly" | "shellAccess" | "shellScriptOverride" | "shrinkwrap" | "socketUpgradeAvailable" | "suspiciousStarActivity" | "suspiciousString" | "telemetry" | "trivialPackage" | "troll" | "typeModuleCompatibility" | "uncaughtOptionalDependency" | "unclearLicense" | "unidentifiedLicense" | "unmaintained" | "unpopularPackage" | "unpublished" | "unresolvedRequire" | "unsafeCopyright" | "unstableOwnership" | "unusedDependency" | "urlStrings" | "usesEval" | "zeroWidth";
        action?: "error" | "ignore" | "monitor" | "warn";
        props?: any;
    }[];
};
//# sourceMappingURL=purl.d.mts.map